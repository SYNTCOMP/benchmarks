INFO {
  TITLE:       "Lily Demo V4"
  DESCRIPTION: "One of the Lily demo files"
  SEMANTICS:   Mealy
  TARGET:      Mealy
}

MAIN {

  INPUTS {
    req;
    cancel;
    go;
  }

  OUTPUTS {
    grant;
  }

  ASSUMPTIONS {
    // A1 assume always(cancel -> next_e[1:2](go));
    G (cancel -> X (go || X go));
  } 

  INVARIANTS {
    // P1 always(req -> next_e[1:3](grant));
    req -> X (grant || X (grant || X grant));

    // P2 always(grant -> next(!grant));
    grant -> X !grant;

    // The original lily spec used the property
    // P3 always(cancel -> next((!grant) until! go));
    // For Moore systems, the spec becomes unrealizable, but it is realizable for Mealy systems.
    // Since the TLSF version of the spec uses TARGET:Mealy, to make the spec unrealizable,
    // we remove the next operator:
    // P3 always(cancel -> ((!grant) until! go));
    cancel -> (!grant U go);
  }
  
}
//#!SYNTCOMP
//STATUS : realizable
//REF_SIZE : 8
//#.
